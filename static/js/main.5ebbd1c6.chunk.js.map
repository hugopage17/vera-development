{"version":3,"sources":["components/Navbar.js","components/Home.js","components/Footer.js","components/About.js","components/Contact.js","components/Team.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","toggleNav","document","getElementById","style","display","state","id","class","onClick","this","to","Component","Home","window","screen","width","overflow","margin","alignItems","float","textAlign","Footer","About","Contact","showMessage","Swal","fire","icon","title","text","fontSize","type","placeholder","Team","App","basename","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0QAkCeA,G,wDA7Bb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAIRC,UAAY,WACVC,SAASC,eAAe,UAAUC,MAAMC,QAAU,QAJlD,EAAKC,MAAQ,GAFG,E,qDAUhB,OACE,yBAAKC,GAAG,UACN,4BACE,4BAAQC,MAAM,aAAaC,QAASC,KAAKT,WACvC,yBAAKO,MAAM,YACX,yBAAKA,MAAM,YACX,yBAAKA,MAAM,aAEb,kBAAC,IAAD,CAAMG,GAAG,IAAIH,MAAM,cAAa,qCAChC,kBAAC,IAAD,CAAMG,GAAG,SAASH,MAAM,cAAa,sCACrC,kBAAC,IAAD,CAAMG,GAAG,WAAWH,MAAM,cAAa,wCACvC,kBAAC,IAAD,CAAMG,GAAG,WAAWH,MAAM,cAAa,+C,GAtB5BI,cCuCNC,E,kDAtCb,WAAYb,GAAO,IAAD,8BAChB,cAAMA,IACDM,MAAQ,GAFG,E,gEAMbQ,OAAOC,OAAOC,OAAS,MACxBd,SAASC,eAAe,UAAUC,MAAMC,QAAU,U,+BAKpD,OACE,yBAAKG,MAAM,gBACT,yBAAKA,MAAM,gBACT,yBAAKA,MAAM,iBAAiBJ,MAAO,CAACa,SAAS,OAAOD,MAAM,MAAME,OAAO,OAAOC,WAAW,WACvF,wBAAIf,MAAO,CAACgB,MAAM,SAAlB,oBACA,uBAAGhB,MAAO,CAACgB,MAAM,UAAjB,oDAGJ,yBAAKZ,MAAM,gBACT,yBAAKA,MAAM,kBACT,uBAAGJ,MAAO,CAACiB,UAAU,WAArB,gIAKJ,yBAAKb,MAAM,mBACT,yBAAKA,MAAM,kBACT,uBAAGJ,MAAO,CAACiB,UAAU,WAArB,sE,GA9BOT,aCwCJU,E,kDAvCb,WAAYtB,GAAO,IAAD,8BAChB,cAAMA,IACDM,MAAQ,GAFG,E,qDAMhB,OACE,yBAAKE,MAAM,kBACT,yBAAKA,MAAM,gBACT,yBAAKJ,MAAO,CAACa,SAAS,SACpB,yBAAKb,MAAO,CAACgB,MAAM,SACjB,4BACE,wCACA,wCACA,yCACA,6BACA,qCACA,8CAGJ,yBAAKhB,MAAO,CAACgB,MAAM,UACjB,4BACE,kBAAC,IAAD,CAAMT,GAAG,IAAIH,MAAM,cAAa,qCAChC,kBAAC,IAAD,CAAMG,GAAG,SAASH,MAAM,cAAa,sCACrC,kBAAC,IAAD,CAAMG,GAAG,WAAWH,MAAM,cAAa,wCACvC,kBAAC,IAAD,CAAMG,GAAG,WAAWH,MAAM,cAAa,4CAI7C,yBAAKJ,MAAO,CAACiB,UAAU,WACrB,2D,GA/BST,aCyBNW,E,kDAxBb,WAAYvB,GAAO,IAAD,8BAChB,cAAMA,IACDM,MAAQ,GAFG,E,gEAMbQ,OAAOC,OAAOC,OAAS,MACxBd,SAASC,eAAe,UAAUC,MAAMC,QAAU,U,+BAKpD,OACE,yBAAKG,MAAM,iBACT,0CACA,yBAAKA,MAAM,eACT,qF,GAjBUI,a,iBCqCLY,E,kDAnCb,WAAYxB,GAAO,IAAD,8BAChB,cAAMA,IAURyB,YAAc,WACZC,IAAKC,KAAK,CACRC,KAAM,UACNC,MAAO,UACPC,KAAM,+DAbR,EAAKxB,MAAQ,GAFG,E,gEAMbQ,OAAOC,OAAOC,OAAS,MACxBd,SAASC,eAAe,UAAUC,MAAMC,QAAU,U,+BAapD,OACE,yBAAKG,MAAM,mBACT,yBAAKA,MAAM,iBACT,0CACA,uBAAGJ,MAAO,CAAC2B,SAAS,KAApB,yGACA,2BAAOC,KAAK,QAAQC,YAAY,gBAAgBzB,MAAM,cAAa,6BACnE,8BAAUyB,YAAY,kBAAkBzB,MAAM,aAAY,6BAC1D,4BAAQA,MAAM,aAAaC,QAASC,KAAKe,aAAzC,gB,GA5BYb,aC2BPsB,E,kDA3Bb,WAAYlC,GAAO,IAAD,8BAChB,cAAMA,IACDM,MAAQ,GAFG,E,gEAMbQ,OAAOC,OAAOC,OAAS,MACxBd,SAASC,eAAe,UAAUC,MAAMC,QAAU,U,+BAKpD,OACE,yBAAKE,GAAG,gBACN,yBAAKC,MAAM,cACT,6CACA,6BACE,iO,GAlBOI,aCyCJuB,E,kDAnCb,WAAYnC,GAAO,IAAD,8BAChB,cAAMA,IAMRC,UAAY,WACVC,SAASC,eAAe,UAAUC,MAAMC,QAAU,SANlD,EAAKC,MAAQ,GAFG,E,qDAYhB,OACE,kBAAC,IAAD,CAAY8B,SAAS,KACnB,6BACE,kBAAC,EAAD,MACA,4BAAQ5B,MAAM,aAAaC,QAASC,KAAKT,WACvC,yBAAKO,MAAM,YACX,yBAAKA,MAAM,YACX,yBAAKA,MAAM,aAEb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,IAAIC,UAAW1B,IACjC,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,SAASC,UAAWhB,IACtC,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,WAAWC,UAAWf,IACxC,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,WAAWC,UAAWL,KAE1C,kBAAC,EAAD,Y,GA5BQtB,aCGE4B,QACW,cAA7B1B,OAAO2B,SAASC,UAEe,UAA7B5B,OAAO2B,SAASC,UAEhB5B,OAAO2B,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF5C,SAASC,eAAe,SDyHpB,kBAAmB4C,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5ebbd1c6.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport '../App.css'\r\n\r\nclass Navbar extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  toggleNav = () => {\r\n    document.getElementById('navbar').style.display = 'none'\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div id='navbar'>\r\n        <ul>\r\n          <button class='toggle-nav' onClick={this.toggleNav}>\r\n            <div class='tog-bar'></div>\r\n            <div class='tog-bar'></div>\r\n            <div class='tog-bar'></div>\r\n          </button>\r\n          <Link to='/' class='route-link'><li>Logo</li></Link>\r\n          <Link to='/About' class='route-link'><li>About</li></Link>\r\n          <Link to='/Contact' class='route-link'><li>Contact</li></Link>\r\n          <Link to='/OurTeam' class='route-link'><li>Our Team</li></Link>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Navbar;\r\n","import React, {Component} from 'react';\r\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\r\nimport '../App.css'\r\n\r\nclass Home extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(window.screen.width <= 560){\r\n      document.getElementById('navbar').style.display = 'none'\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div class='home-wrapper'>\r\n        <div class='home-top-sec'>\r\n          <div class='home-inner-sec' style={{overflow:'auto',width:'70%',margin:'auto',alignItems:'center'}}>\r\n            <h1 style={{float:'left'}}>Vera Development</h1>\r\n            <p style={{float:'right'}}>Insert blurb introducing Vera Development here</p>\r\n          </div>\r\n        </div>\r\n        <div class='home-mid-sec'>\r\n          <div class='home-inner-sec'>\r\n            <p style={{textAlign:'center'}}>This section of the home page can have infomation\r\n            around the three main services we offer with a brief description of\r\n            each</p>\r\n          </div>\r\n        </div>\r\n        <div class='home-bottom-sec'>\r\n          <div class='home-inner-sec'>\r\n            <p style={{textAlign:'center'}}>This section can showcase testimonials from clients we have</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React, {Component} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport '../App.css'\r\n\r\nclass Footer extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div class='footer-wrapper'>\r\n        <div class='footer-inner'>\r\n          <div style={{overflow:'auto'}}>\r\n            <div style={{float:'left'}}>\r\n              <ul>\r\n                <li>Linkedin</li>\r\n                <li>Facebook</li>\r\n                <li>Instagram</li>\r\n                <br/>\r\n                <li>Email</li>\r\n                <li>Phone Number</li>\r\n              </ul>\r\n            </div>\r\n            <div style={{float:'right'}}>\r\n              <ul>\r\n                <Link to='/' class='route-link'><li>Logo</li></Link>\r\n                <Link to='/About' class='route-link'><li>About</li></Link>\r\n                <Link to='/Contact' class='route-link'><li>Contact</li></Link>\r\n                <Link to='/OurTeam' class='route-link'><li>Our Team</li></Link>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div style={{textAlign:'center'}}>\r\n            <p>Vera Development &#169;</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Footer;\r\n","import React, {Component} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport '../App.css'\r\n\r\nclass About extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(window.screen.width <= 560){\r\n      document.getElementById('navbar').style.display = 'none'\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div class='about-wrapper'>\r\n        <h1>About Vera</h1>\r\n        <div class='about-panel'>\r\n          <p>Insert description of Vera and our services here</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default About;\r\n","import React, {Component} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport '../App.css'\r\nimport Swal from 'sweetalert2'\r\n\r\nclass Contact extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(window.screen.width <= 560){\r\n      document.getElementById('navbar').style.display = 'none'\r\n    }\r\n  }\r\n\r\n  showMessage = () => {\r\n    Swal.fire({\r\n      icon: 'success',\r\n      title: 'Success',\r\n      text: 'Thank you for your message, we will reply within 2-3 days'\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div class='contact-wrapper'>\r\n        <div class='contact-inner'>\r\n          <h1>Contact Us</h1>\r\n          <p style={{fontSize:12}}>Please send us all your queries and requests below and we will get back to you with 2-3 business days</p>\r\n          <input type='email' placeholder='Email Address' class='email-add'/><br/>\r\n          <textarea placeholder='How can we help' class='msg-body'/><br/>\r\n          <button class='submit-but' onClick={this.showMessage}>Submit</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Contact;\r\n","import React, {Component} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport '../App.css'\r\n\r\nclass Team extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(window.screen.width <= 560){\r\n      document.getElementById('navbar').style.display = 'none'\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div id='team-wrapper'>\r\n        <div class='team-inner'>\r\n          <h1>Meet the Team</h1>\r\n          <div>\r\n            <p>Here we can have a photo of each member of Vera that a user can click on that will then\r\n            display a popup box with the photo enlarged and a small description about that persons role at vera</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Team;\r\n","import React, {Component} from 'react';\nimport { BrowserRouter, Route, Link, Switch, HashRouter  } from \"react-router-dom\";\nimport Navbar from './components/Navbar.js'\nimport Home from './components/Home.js'\nimport Footer from './components/Footer.js'\nimport About from './components/About.js'\nimport Contact from './components/Contact.js'\nimport Team from './components/Team.js'\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {}\n  }\n\n\n\n  toggleNav = () => {\n    document.getElementById('navbar').style.display = 'block'\n  }\n\n  render(){\n    return (\n      <HashRouter basename=\"/\">\n        <div>\n          <Navbar/>\n          <button class='toggle-nav' onClick={this.toggleNav}>\n            <div class='tog-bar'></div>\n            <div class='tog-bar'></div>\n            <div class='tog-bar'></div>\n          </button>\n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <Route exact path='/About' component={About}/>\n            <Route exact path='/Contact' component={Contact}/>\n            <Route exact path='/OurTeam' component={Team}/>\n          </Switch>\n          <Footer/>\n        </div>\n      </HashRouter>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}